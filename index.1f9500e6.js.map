{"mappings":"AAAA,IAAMA,SAAW,CACbC,SAAU,yBACVC,aAAc,wBACdC,gBAAiB,sDACjBC,MAAO,+CACPC,OAAA,SAAOC,EAAKC,GACR,MAAQ,mBAA6BC,OAAXF,EAAI,SAAWE,OAAJD,EAAI,iBAI3CE,YAAcC,SAASC,eAAe,QACtCC,aAAeF,SAASC,eAAe,SACvCE,gBAAkBH,SAASC,eAAe,YAC1CG,aAAeJ,SAASC,eAAe,SACvCI,iBAAmBL,SAASC,eAAe,aAC3CK,YAAcN,SAASC,eAAe,iBAEnCM,qBAAqBC,GACtBA,EAAEC,OAAOC,gBACTF,EAAEC,OAAOE,UAAUC,OAAO,WAE1BJ,EAAEC,OAAOE,UAAUE,IAAI,oBAGtBC,WAAWN,GACZA,EAAEC,OAAOC,iBACTF,EAAEC,OAAOM,kBAAkB,IAG3BP,EAAEC,OAAOO,SAASC,MAClBT,EAAEC,OAAOE,UAAUC,OAAO,WAE1BJ,EAAEC,OAAOE,UAAUE,IAAI,WAY/Bd,YAAYmB,iBAAiB,QAASJ,YACtCf,YAAYmB,iBAAiB,QAASX,sBACtCR,YAAYmB,iBAAiB,WAAYX,sBACzCR,YAAYmB,iBAAiB,WAAW,WACpC,IAAMV,EAAIT,YAENS,EAAEQ,SAASG,aACXX,EAAEO,kBAAkBzB,SAASC,UACxBiB,EAAEQ,SAASI,UAAYZ,EAAEQ,SAASK,QACvCb,EAAEO,kBAAkBzB,SAASK,OAAOa,EAAEc,UAAWd,EAAEe,YAEnDf,EAAEO,kBAAkB,OAI5Bb,aAAagB,iBAAiB,QAASJ,YACvCZ,aAAagB,iBAAiB,QAASX,sBACvCL,aAAagB,iBAAiB,WAAYX,sBAC1CL,aAAagB,iBAAiB,WAAW,WACrC,IAAMV,EAAIN,aAENM,EAAEQ,SAASG,aACXX,EAAEO,kBAAkBzB,SAASC,UACxBiB,EAAEQ,SAASQ,aAChBhB,EAAEO,kBAAkBzB,SAASE,cAE7BgB,EAAEO,kBAAkB,OAI5BZ,gBAAgBe,iBAAiB,QAASJ,YAC1CX,gBAAgBe,iBAAiB,QAASX,sBAC1CJ,gBAAgBe,iBAAiB,WAAYX,sBAC7CJ,gBAAgBe,iBAAiB,WAAW,WACxC,IAAMV,EAAIL,gBAENK,EAAEQ,SAASG,aACXX,EAAEO,kBAAkBzB,SAASC,UACxBiB,EAAEQ,SAASS,gBAChBjB,EAAEO,kBAAkBzB,SAASG,iBACxBe,EAAEQ,SAASI,UAAYZ,EAAEQ,SAASK,QACvCb,EAAEO,kBAAkBzB,SAASK,OAAOa,EAAEc,UAAWd,EAAEe,YAEnDf,EAAEO,kBAAkB,OAI5BX,aAAac,iBAAiB,QAASJ,YACvCV,aAAac,iBAAiB,WAAW,WACrC,IAAMV,EAAIJ,aACNI,EAAEQ,SAASG,aACXX,EAAEO,kBAAkBzB,SAASI,OAE7Bc,EAAEO,kBAAkB,OAG5BT,YAAYY,iBAAiB,UAAU,SAAAV,GACnCA,EAAEkB,iBAEFC,QAAQC,IAAI,kBAAmB,CAC3BC,KAAM9B,YAAY+B,MAClBC,MAAO7B,aAAa4B,MACpBE,SAAU7B,gBAAgB2B,WAE/B","sources":["src/formValidation.js"],"sourcesContent":["const messages = {\n    required: \"This field is required\",\n    invalidEmail: \"Invalid email address\",\n    passwordPattern: \"Password must have at least one uppercase character\",\n    agree: \"You must agree with Terms and Privacy Policy\",\n    length(min, max) {\n        return `Must be between ${min} and ${max} characters`\n    }\n}\n\nconst nameElement = document.getElementById(\"name\");\nconst emailElement = document.getElementById(\"email\");\nconst passwordElement = document.getElementById(\"password\");\nconst agreeElement = document.getElementById(\"agree\");\nconst btnSubmitElement = document.getElementById(\"btnSubmit\");\nconst formElement = document.getElementById(\"form\");\n\nfunction checkValidityOutline(e) {\n    if (e.target.checkValidity())\n        e.target.classList.remove('invalid');\n    else\n        e.target.classList.add('invalid');\n}\n\nfunction checkInput(e) {\n    if (e.target.checkValidity())\n        e.target.setCustomValidity(\"\");\n\n    // toggle invalid class\n    if (e.target.validity.valid)\n        e.target.classList.remove('invalid');\n    else\n        e.target.classList.add('invalid');\n\n    // check validity of all form's elements\n    // it can be used to disable the button if validation fails\n    /*if (nameElement.validity.valid && emailElement.validity.valid\n        && passwordElement.validity.valid && agreeElement.validity.valid)\n        btnSubmitElement.disabled = false;\n    else\n        btnSubmitElement.disabled = true;*/\n}\n\n/* VALIDATING NAME */\nnameElement.addEventListener('input', checkInput);\nnameElement.addEventListener('focus', checkValidityOutline);\nnameElement.addEventListener('focusout', checkValidityOutline);\nnameElement.addEventListener('invalid', () => {\n    const e = nameElement;\n\n    if (e.validity.valueMissing)\n        e.setCustomValidity(messages.required);\n    else if (e.validity.tooShort || e.validity.tooLong)\n        e.setCustomValidity(messages.length(e.minLength, e.maxLength));\n    else\n        e.setCustomValidity(\"\");\n});\n\n/* VALIDATING EMAIL */\nemailElement.addEventListener('input', checkInput);\nemailElement.addEventListener('focus', checkValidityOutline);\nemailElement.addEventListener('focusout', checkValidityOutline);\nemailElement.addEventListener('invalid', () => {\n    const e = emailElement;\n\n    if (e.validity.valueMissing)\n        e.setCustomValidity(messages.required);\n    else if (e.validity.typeMismatch)\n        e.setCustomValidity(messages.invalidEmail);\n    else\n        e.setCustomValidity(\"\");\n});\n\n/* VALIDATING PASSWORD */\npasswordElement.addEventListener('input', checkInput);\npasswordElement.addEventListener('focus', checkValidityOutline);\npasswordElement.addEventListener('focusout', checkValidityOutline);\npasswordElement.addEventListener('invalid', () => {\n    const e = passwordElement;\n\n    if (e.validity.valueMissing)\n        e.setCustomValidity(messages.required);\n    else if (e.validity.patternMismatch)\n        e.setCustomValidity(messages.passwordPattern);\n    else if (e.validity.tooShort || e.validity.tooLong)\n        e.setCustomValidity(messages.length(e.minLength, e.maxLength))\n    else\n        e.setCustomValidity(\"\");\n});\n\n/* VALIDATING CHECKBOX */\nagreeElement.addEventListener('input', checkInput);\nagreeElement.addEventListener('invalid', () => {\n    const e = agreeElement;\n    if (e.validity.valueMissing)\n        e.setCustomValidity(messages.agree);\n    else\n        e.setCustomValidity(\"\");\n})\n\nformElement.addEventListener('submit', e => {\n    e.preventDefault();\n\n    console.log('Submiting data:', {\n        name: nameElement.value,\n        email: emailElement.value,\n        password: passwordElement.value\n    });\n}, true);"],"names":["messages","required","invalidEmail","passwordPattern","agree","length","min","max","concat","nameElement","document","getElementById","emailElement","passwordElement","agreeElement","btnSubmitElement","formElement","checkValidityOutline","e","target","checkValidity","classList","remove","add","checkInput","setCustomValidity","validity","valid","addEventListener","valueMissing","tooShort","tooLong","minLength","maxLength","typeMismatch","patternMismatch","preventDefault","console","log","name","value","email","password"],"version":3,"file":"index.1f9500e6.js.map"}